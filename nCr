const int N = 3e5 + 10;
vector<int> fact(N);
vector<int> inv(N);
const int mod = (int)1e9 + 7;

int power(int x, int y, int m) {
  int res = 1;
  x %= m;
  if(x == 0) return 0;
  while(y) {
    if(y & 1) res = (res * x) % m;
    y = y >> 1;
    x *= x;
    x %= m;
  }
  return res;
}
void inti(){
    fact[0] = 1;
    for (int i = 1; i < N; i++){
        fact[i] = (fact[i - 1] % mod * i % mod) % mod;
    }
    for (int i = 0; i < N; i++){
        inv[i] = power(fact[i], mod - 2, mod);
    }
}
int nCr(int n, int r){
    return (fact[n] % mod * inv[n - r] % mod * inv[r] % mod) % mod;
}
