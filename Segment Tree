struct segmentTree{
  int op(int a, int b) {
    return a + b;
  }
  
  vector<int> t;
  int n;

  segmentTree(int _n) {
    n = _n;
    t.resize(2 * n);
  }

  void build(vector<int> &a) {
    for(int i = 0; i < a.size(); i++) {
        update(i, a[i]);
    }
  }
  
  void update(int pos, int val) {
    for(t[pos += n] = val; pos; pos >>= 1) {
        t[pos >> 1] = op(t[pos], t[pos ^ 1]); 
    }
  }

  int query(int l, int r) {
    int ans = 0;
    for(l += n, r += n + 1; l < r ;l >>= 1, r >>= 1) {
       if(l & 1) {
        ans = op(ans, t[l++]);
       }
       if(r & 1) {
        ans = op(ans, t[--r]);
       }
    }
    return ans;
  }
};
